captainVersion: 4
services:
    $$cap_appname:
        volumes:
            - $$cap_appname-keydb-data:/data
        restart: always
        environment:
            KEYDB_PASSWORD: $$cap_keydb_password
        caproverExtra:
            dockerfileLines:
                - FROM eqalpha/keydb:$$cap_keydb_architecture_v$$cap_keydb_version
                - CMD exec keydb-server /etc/keydb/keydb.conf --server-threads 4 --requirepass "$KEYDB_PASSWORD"
            notExposeAsWebApp: 'true'
caproverOneClickApp:
    variables:
        - id: $$cap_keydb_version
          label: KeyDB Version
          description: 'Check out their Docker page for the valid tags: https://hub.docker.com/r/eqalpha/keydb/tags'
          defaultValue: '6.3.2'
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_keydb_architecture
          label: KeyDB Architecture
          description: 'Choose the architecture for your KeyDB instance (x86_64 or arm64)'
          defaultValue: 'x86_64'
          validRegex: /^(x86_64|arm64)$/
        - id: $$cap_keydb_password
          label: KeyDB Password
          validRegex: /^(\w|[^\s"])+$/
    instructions:
        start: >-
            KeyDB is an open source, high-performance fork of Redis. It is fully compatible with Redis and includes additional features such as multithreading.
            After installation on CapRover, it will be available as srv-captain--YOUR_CONTAINER_NAME at port 6379 to other CapRover apps.
            Enter your KeyDB container name and click on next. It will take about a minute for the process to finish.
        end: "KeyDB is deployed and available as srv-captain--$$cap_appname:6379 to other apps. For example with NodeJS: const client = redis.createClient(6379, 'srv-captain--$$cap_appname' , {password: '$$cap_keydb_password'})"
    displayName: 'KeyDB'
    isOfficial: true
    description: KeyDB is a high-performance fork of Redis, fully compatible with Redis and includes additional features such as multithreading
    documentation: Taken from https://hub.docker.com/r/eqalpha/keydb
