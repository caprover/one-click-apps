captainVersion: 4
services:
    # Shiori
    $$cap_appname:
        image: ghcr.io/go-shiori/shiori:$$cap_shiori_version
        environment:
            SHIORI_DBMS: mysql
            SHIORI_MYSQL_USER: $$cap_mariadb-user
            SHIORI_MYSQL_PASS: $$cap_mariadb-pass
            SHIORI_MYSQL_NAME: $$cap_mariadb-db
            SHIORI_MYSQL_ADDRESS: tcp(srv-captain--$$cap_appname-mariadb)
        volumes:
            - $$cap_appname-data:/shiori
        caproverExtra:
            containerHttpPort: '8080'
    # MariaDB
    $$cap_appname-mariadb:
        image: mariadb:$$cap_mariadb_version
        environment:
            MYSQL_RANDOM_ROOT_PASSWORD: '1'
            MYSQL_DATABASE: $$cap_mariadb-db
            MYSQL_USER: $$cap_mariadb-user
            MYSQL_PASSWORD: $$cap_mariadb-pass
        volumes:
            - $$cap_appname-mariadb-data:/var/lib/mysql
        restart: unless-stopped
        caproverExtra:
            notExposeAsWebApp: 'true'
caproverOneClickApp:
    variables:
        - id: $$cap_shiori_version
          label: Shiori Version Tag
          description: Check out their Docker page for the valid tags https://github.com/go-shiori/shiori/pkgs/container/shiori/versions?filters%5Bversion_type%5D=tagged
          defaultValue: 'v1.5.5'
        - id: $$cap_mariadb_version
          label: MariaDB Version
          defaultValue: '11.0.2'
          description: Check out their docker page for the valid tags https://hub.docker.com/r/library/mariadb/tags/
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_mariadb-db
          label: MariaDB Database
          description: Database name for Shiori
          defaultValue: 'shiori'
        - id: $$cap_mariadb-user
          label: MariaDB User
          description: Database User for Shiori
          defaultValue: 'shiori'
        - id: $$cap_mariadb-pass
          label: MariaDB database user password
          description: Super secret database user password
          defaultValue: $$cap_gen_random_hex(16)
    displayName: 'Shiori'
    isOfficial: true
    description: 'A simple bookmark manager built with Go.'
    instructions:
        start: >
            Shiori is a simple bookmarks manager written in the Go language. Intended as a simple clone of Pocket. 
            You can use it as a command line application or as a web application. 
            This application is distributed as a single binary, which means it can be installed and used easily.
        end: >
            Shiori is up and running.

            Since this is our first time, we don't have any account registered yet. With that said, we can use the default user to access web interface

            username: shiori
            password: gopher

            Once login succeed you will be able to use the web interface. To add the new account, open the settings page and add accounts as needed.
            The first new account you add will become the owner and it will deactivate the "shiori:gopher" default user automatically.

            Read more at: https://github.com/go-shiori/shiori/blob/master/docs/Usage.md#using-web-interface
        documentation: >
            From https://github.com/go-shiori/shiori.
