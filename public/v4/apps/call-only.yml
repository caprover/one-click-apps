captainVersion: 4
services:
    $$cap_appname:
        image: calcom/cal.com:$$cap_version
        restart: always
        environment:
            NODE_ENV: production
            NEXT_PUBLIC_WEBAPP_URL: http://$$cap_appname.$$cap_root_domain
            NEXTAUTH_SECRET: $$cap_secret_key_base
            CALENDSO_ENCRYPTION_KEY: $$cap_calendso_encryption_key
            POSTGRES_USER: $$cap_postgres_user
            POSTGRES_PASSWORD: $$cap_postgres_password
            POSTGRES_DB: $$cap_postgres_db
            DATABASE_HOST: $$cap_postgres_host
            DATABASE_URL: postgresql://$$cap_postgres_user:$$cap_postgres_password@$$cap_postgres_host/$$cap_postgres_db
            GOOGLE_API_CREDENTIALS: '{}'
            EMAIL_FROM: $$cap_email_from
            EMAIL_SERVER_HOST: $$cap_email_host
            EMAIL_SERVER_PORT: $$cap_email_server_password
            EMAIL_SERVER_USER: $$cap_email_server_user
            EMAIL_SERVER_PASSWORD: $$cap_email_server_password
        caproverExtra:
            containerHttpPort: '3000'
caproverOneClickApp:
    variables:
        - id: $$cap_version
          label: Cal.com Version
          defaultValue: 'v2.5.4'
          description: Check out their docker page for the valid tags https://hub.docker.com/r/calcom/cal.com/tags
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_secret_key_base
          label: Secret Key Base
          description: The randomized string which is used to verify the integrity of signed cookies. Use `openssl rand -base64 32` to generate a key
          defaultValue: secret
        - id: $$cap_calendso_encryption_key
          label: Secret Key Base
          description: Encryption key that will be used to encrypt CalDAV credentials, choose a random string, for example with `dd if=/dev/urandom bs=1K count=1 | md5sum`
          defaultValue: secret
        - id: $$cap_postgres_user
          label: Postgres user
          defaultValue: user
        - id: $$cap_postgres_password
          label: Postgres password
          defaultValue: password
        - id: $$cap_postgres_db
          label: Postgres db
          defaultValue: calendso
        - id: $$cap_postgres_host
          label: Postgres host
          defaultValue: database:5432
        - id: $$cap_email_from
          label: Emails from
          defaultValue: notifications@example.com
        - id: $$cap_email_host
          label: Emails server host
          defaultValue: smtp.example.com
        - id: $$cap_email_port
          label: Emails server port
          defaultValue: '587'
        - id: $$cap_email_server_user
          label: Emails server user
          defaultValue: email_user
        - id: $$cap_email_server_password
          label: Emails server password
          defaultValue: email_password
    instructions:
        start: >-
            The open-source Calendly alternative.
        end: >-
            Aaaand you're Cal.com is now successfully deployed! ðŸ˜„

            Please change the following settings before using the service: 
            1. Go to the settings for `$$cap_appname`
            2. Enable **Websocket Support**

            Remember that this app will not create a Database by itself. You need to provide all that information.
    displayName: 'Cal.com - No Database'
    isOfficial: true
    description: 'The open-source Calendly alternative.'
    documentation: 'Read more at: https://github.com/calcom/cal.com'
