captainVersion: 4
services:
    $$cap_appname:
        restart: always
        ports:
            - $$cap_gost_api_port:$$cap_gost_api_port
        volumes:
            - $$cap_appname-data:/configuration
        caproverExtra:
            notExposeAsWebApp: false
            containerHttpPort: 80
            websocketSupport: true
            dockerfileLines:
                -  # Specify the base image for the app
                - FROM alpine:$$cap_gost_alpineversion
                -  # Install necessary packages
                - RUN apk update && apk add --no-cache wget tar bash yq-go iptables
                -  # Make directories needed
                - RUN mkdir -p tmpfiles && mkdir -p /configuration
                -  # Download and prepare GOST binary
                - RUN wget -q https://github.com/go-gost/gost/releases/download/v3.0.0-nightly.20240625/gost_3.0.0-nightly.20240625_linux_amd64.tar.gz
                - RUN tar -xzf gost_3.0.0-nightly.20240625_linux_amd64.tar.gz -C tmpfiles && mv tmpfiles/gost /bin/gost && chmod +x /bin/gost
                -  # Remove temp files
                - RUN rm -rf tmpfiles gost_3.0.0-nightly.20240625_linux_amd64.tar.gz
                -  # Create a base GOST config file
                - RUN touch /configuration/gost.yaml
                - RUN yq eval '.api.addr = ":$$cap_gost_api_port"' -i /configuration/gost.yaml
                - RUN yq eval '.api.pathPrefix = "/$$cap_gost_api_path"' -i /configuration/gost.yaml
                - RUN yq eval '.api.accesslog = $$cap_gost_api_alog' -i /configuration/gost.yaml
                - RUN yq eval '.api.auth.username = "$$cap_gost_api_user"' -i /configuration/gost.yaml
                - RUN yq eval '.api.auth.password = "$$cap_gost_api_password"' -i /configuration/gost.yaml
                -  # Make the entrance
                - RUN printf '#!/bin/bash\nexec /bin/gost -C /configuration/gost.yaml' > /start.sh
                -  # Set the entrypoint
                - ENTRYPOINT ["/bin/bash", "/start.sh"]
caproverOneClickApp:
    variables:
        - id: $$cap_gost_alpineversion
          label: Alpine Linux Version
          description: Check out https://hub.docker.com/_/alpine/tags for valid tags.
          defaultValue: 3.20.1
        - id: $$cap_gost_api_path
          label: Custom prefix path for GOST WebAPI
          description: At least 3 letter all lowercase
          defaultValue: api
          validRegex: /^[a-z]{3,}$/
        - id: $$cap_gost_api_alog
          label: Print accessing API into log
          description: Boolean
          defaultValue: true
          validRegex: /^(true|false)$/
        - id: $$cap_gost_api_user
          label: Username for GOST WebAPI
          description: At least 4 letter all lowercase
          defaultValue: gostguru
          validRegex: /^[a-z]{4,}$/
        - id: $$cap_gost_api_password
          label: Password for GOST WebAPI
          description: At least 8 char, containing uppercase & lowercase letters, digit, also a special character.
          defaultValue: $$cap_gen_random_hex(8)
          validRegex: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\w\s])[ -~]{8,}$/
        - id: $$cap_gost_api_port
          label: Port for GOST WebAPI
          description: Regex makes sure you won't use a commonly known ports for other services
          defaultValue: 18080
          validRegex: /^(?!21$|22$|23$|25$|53$|67$|68$|69$|80$|110$|119$|123$|143$|389$|443$|465$|587$|993$|995$|3306$|5432$|8080$|8443$|3389$)\d{1,5}$/
    instructions:
        start: |-
            Make GOST service at your exposal using its WebAPI
        end: |-
            GOST service has been successfully deployed!

            Review your GOST config at $$cap_appname.$$cap_root_domain:$$cap_gost_api_port/$$cap_gost_api_path/config

            Or start using **GOST API** in either of WebUI (https://ui.gost.run) or GUI (https://github.com/go-gost/gostctl/releases)
            **API Address**: $$cap_appname.$$cap_root_domain:$$cap_gost_api_port/$$cap_gost_api_path
            **Username**: $$cap_gost_api_user
            **Password**: $$cap_gost_api_password

            **Important Note**:
            If you want to change the Mapped Port (`$$cap_gost_api_port`) you need to edit API Port at `/configuration/gost.yaml` too otherwise WebAPI access will break, also you can change other values or add GOST services into that file manually.

            **Post Install Instruction**:
            If CapRover version is not 1.12+, check the **Websocket Support** box in **HTTP Settings**, otherwise it's automatically checked by the app installer
    displayName: GOST v3 - GO Simple Tunnel
    isOfficial: false
    description: A simple security tunnel written in Go lang
    documentation: Read their official docs at https://gost.run/en/
