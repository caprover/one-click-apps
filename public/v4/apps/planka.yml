captainVersion: 4
services:
    $$cap_appname:
        caproverExtra:
            containerHttpPort: $$cap_PLANKA_PORT
            dockerfileLines:
                - FROM ghcr.io/plankanban/planka:$$cap_PLANKA_VERSION
                - CMD ["bash", "-c", "for i in `seq 1 30`; do ./start.sh && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 seconds...\"; sleep 5; done; (exit $$s)"]
        environment:
            BASE_URL: http://$$cap_appname.$$cap_root_domain
            TRUST_PROXY: $$cap_PLANKA_TRUST_PROXY
            DATABASE_URL: postgresql://$$cap_POSTGRES_USER:$$cap_POSTGRES_PASSWORD@srv-captain--$$cap_appname-db/$$cap_POSTGRES_DB
            SECRET_KEY: $$cap_PLANKA_SECRET_KEY
        hostname: $$cap_appname.$$cap_root_domain
        depends_on:
            - $$cap_appname-db
        volumes:
            - $$cap_appname-user-avatars:/app/public/user-avatars
            - $$cap_appname-project-background-images:/app/public/project-background-images
            - $$cap_appname-attachments:/app/private/attachments
    $$cap_appname-db:
        caproverExtra:
            notExposeAsWebApp: 'true'
        image: postgres:$$cap_POSTGRES_VERSION
        volumes:
            - $$cap_appname-db:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: $$cap_POSTGRES_USER
            POSTGRES_PASSWORD: $$cap_POSTGRES_PASSWORD
            POSTGRES_DB: $$cap_POSTGRES_DB
            POSTGRES_HOST_AUTH_METHOD: $$cap_POSTGRES_HOST_AUTH_METHOD
caproverOneClickApp:
    instructions:
        start: |-
            Planka is a Trello-like kanban board built with React and Redux.
        end: |-
            Planka has been successfully deployed! It might take few moments before it's fully started.
            You can access it at `http://$$cap_appname.$$cap_root_domain` with user `demo@demo.demo` and password `demo`.

            Please do the following steps:
            1. Activate **WebSocket Support**
            2. If you enabled HTTPS, you should adjust the `BASE_URL` environment variable accordingly

            Enjoy your self-hosted Trello alternative!
    displayName: Planka
    isOfficial: true
    description: Realtime Kanban Board for Workgroups
    documentation: https://github.com/plankanban/planka#deploy
    variables:
        - id: $$cap_PLANKA_VERSION
          label: General | Planka Version
          description: Check out their valid tags at https://github.com/orgs/plankanban/packages/container/package/planka
          defaultValue: '1.8.4'
          validRegex: /.{1,}/
        - id: $$cap_POSTGRES_VERSION
          label: General | PostgreSQL Version
          description: Check out their valid tags at https://hub.docker.com/r/btcpayserver/postgres/tags
          defaultValue: '13.7'
          validRegex: /.{1,}/
        - id: $$cap_PLANKA_PORT
          label: Application | Port
          description: Port of the Planka host.
          defaultValue: 1337
          validRegex: /.{1,}/
        - id: $$cap_PLANKA_TRUST_PROXY
          label: Application | Trust Proxy
          description: Whether to trust proxy in Planka.
          defaultValue: 'false'
          validRegex: /.{1,}/
        - id: $$cap_PLANKA_SECRET_KEY
          label: Application | Secret Key
          description: Secret key for data encryption.
          defaultValue: $$cap_gen_random_hex(32)
          validRegex: /.{1,}/
        - id: $$cap_POSTGRES_USER
          label: Database | User Name
          description: User name of the PostgreSQL database.
          defaultValue: planka
          validRegex: /.{1,}/
        - id: $$cap_POSTGRES_PASSWORD
          label: Database | User Password
          description: User password of the PostgreSQL database.
          defaultValue: $$cap_gen_random_hex(16)
          validRegex: /.{1,}/
        - id: $$cap_POSTGRES_DB
          label: Database | Name
          description: Name of the PostgreSQL database.
          defaultValue: planka
          validRegex: /.{1,}/
        - id: $$cap_POSTGRES_HOST_AUTH_METHOD
          label: Database | Host Authentication Method
          description: Method of the PostgreSQL host authentication.
          defaultValue: trust
          validRegex: /.{1,}/
