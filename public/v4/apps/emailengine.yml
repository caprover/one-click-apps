captainVersion: 4
services:
    # EmailEngine
    $$cap_appname:
        depends_on:
            - $$cap_appname-redis
        image: andris9/emailengine:$$cap_emailengine_version
        restart: always
        environment:
            WAIT_HOSTS: srv-captain--$$cap_appname-redis:6379
            EENGINE_REDIS: redis://:@srv-captain--$$cap_appname-redis:6379
        caproverExtra:
            containerHttpPort: '3000'
    # Redis
    $$cap_appname-redis:
        image: redis:$$cap_redis_version
        command: redis-server
        volumes:
            - $$cap_appname-db-data:/data/db
        restart: always
        caproverExtra:
            notExposeAsWebApp: 'true'
caproverOneClickApp:
    variables:
        - id: $$cap_emailengine_version
          label: EmailEngine Version
          defaultValue: 'v2'
          description: Check out their docker page for the valid tags https://hub.docker.com/r/andris9/emailengine/tags
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_redis_version
          label: Redis Version
          defaultValue: '7.0.2'
          description: Check out their docker page for the valid tags https://hub.docker.com/_/redis?tab=tags
          validRegex: /^([^\s^\/])+$/
    instructions:
        start: >-
            IMAP and SMTP are hard, so let EmailEngine handle these for you. Run REST API calls to interact with email servers and receive webhooks for changes on tracked email accounts. With EmailEngine, you can focus on building features that matter instead of spending time rolling custom IMAP and SMTP connectivity logic.
        end: >-
            You're done! ðŸ¤—
            Your EmailEngine is available at http://$$cap_appname.$$cap_root_domain:3000
    displayName: 'EmailEngine'
    isOfficial: true
    description: Self-hosted application that opens a permanent IMAP connection against every registered email account to translate API requests to IMAP commands and monitor changes on these accounts.
    documentation: Taken from https://hub.docker.com/r/andris9/emailengine
