captainVersion: 4
services:
    $$cap_appname-postgres:
        image: postgres:$$cap_POSTGRES_VERSION
        environment:
            POSTGRES_USER: glitchtip
            POSTGRES_PASSWORD: $$cap_POSTGRES_PASSWORD
        volumes:
            - $$cap_appname-postgres-data:/var/lib/postgresql/data
        caproverExtra:
            notExposeAsWebApp: 'true'
    $$cap_appname-redis:
        environment:
            REDIS_PASSWORD: $$cap_REDIS_PASSWORD
        caproverExtra:
            dockerfileLines:
                - FROM redis:$$cap_REDIS_VERSION
                - CMD exec redis-server --requirepass "$$cap_REDIS_PASSWORD"
            notExposeAsWebApp: 'true'
    $$cap_appname:
        depends_on:
            - $$cap_appname-postgres
            - $$cap_appname-redis
        environment:
            DATABASE_URL: postgres://glitchtip:$$cap_POSTGRES_PASSWORD@srv-captain--$$cap_appname-postgres:5432/glitchtip
            REDIS_URL: redis://:$$cap_REDIS_PASSWORD@srv-captain--$$cap_appname-redis:6379
            SECRET_KEY: $$cap_SECRET
            PORT: 8000
            EMAIL_URL: $$cap_SMTP
            GLITCHTIP_DOMAIN: http://$$cap_appname.$$cap_root_domain
            DEFAULT_FROM_EMAIL: $$cap_FROM_EMAIL
            CELERY_WORKER_CONCURRENCY: $$cap_CELERY_WORKER_CONCURRENCY
        caproverExtra:
            containerHttpPort: '8000'
            dockerfileLines:
                - FROM glitchtip/glitchtip:$$cap_GLITCHTIP_VERSION
                - CMD ./manage.py migrate && ./bin/start.sh
    $$cap_appname-worker:
        depends_on:
            - $$cap_appname-postgres
            - $$cap_appname-redis
        environment:
            DATABASE_URL: postgres://glitchtip:$$cap_POSTGRES_PASSWORD@srv-captain--$$cap_appname-postgres:5432/glitchtip
            REDIS_URL: redis://:$$cap_REDIS_PASSWORD@srv-captain--$$cap_appname-redis:6379
            SECRET_KEY: $$cap_SECRET
            PORT: 8000
            EMAIL_URL: $$cap_SMTP
            GLITCHTIP_DOMAIN: http://$$cap_appname.$$cap_root_domain
            DEFAULT_FROM_EMAIL: $$cap_FROM_EMAIL
            CELERY_WORKER_CONCURRENCY: $$cap_CELERY_WORKER_CONCURRENCY
        caproverExtra:
            dockerfileLines:
                - FROM glitchtip/glitchtip:$$cap_GLITCHTIP_VERSION
                - CMD ./bin/run-celery-with-beat.sh
            notExposeAsWebApp: 'true'
caproverOneClickApp:
    variables:
        - id: $$cap_GLITCHTIP_VERSION
          label: GlitchTip Version
          defaultValue: 'v2.0.5'
          description: Check out their Docker page for the valid tags https://hub.docker.com/r/glitchtip/glitchtip/tags
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_POSTGRES_VERSION
          label: Postgres Version
          defaultValue: '14'
          description: Check out their Docker page for the valid tags https://hub.docker.com/_/postgres/tags
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_REDIS_VERSION
          label: Redis Version
          defaultValue: '7.0.5-alpine'
          description: Check out their docker page for the valid tags https://hub.docker.com/_/redis?tab=tags
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_CELERY_WORKER_CONCURRENCY
          defaultValue: '2'
          description: Number of concurrent celery workers. Defaults to number of CPU cores. Highly recommended to change. Our sample docker compose file defaults this to 2, to avoid unwanted and unnecessary scaling.
          label: Celery Worker Concurrency
        - id: $$cap_SMTP
          defaultValue: smtp://email:password@smtp_url:port
          description: See https://glitchtip.com/documentation/install#configuration.
          label: SMTP Configuration
        - id: $$cap_FROM_EMAIL
          defaultValue: info@example.com
          description: Default from email address.
          label: Email Address
        - id: $$cap_POSTGRES_PASSWORD
          defaultValue: $$cap_gen_random_hex(24)
          description: This is the PostgreSQL password for user 'glitchtip'.
          label: PostgreSQL Password
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_REDIS_PASSWORD
          defaultValue: $$cap_gen_random_hex(24)
          description: This is the PostgreSQL password for user 'glitchtip'.
          label: Redis Password
          validRegex: /^([^\s^\/])+$/
        - id: $$cap_SECRET
          label: Secret Key
          defaultValue: $$cap_gen_random_hex(32)
          description: Secret key used by glitchtip.
          validRegex: /^([^\s^\/])+$/
    instructions:
        start: |-
            GlitchTip makes monitoring software easy. Track errors, monitor performance, and check site uptime all in one place. Our app is compatible with Sentry client SDKs, but easier to run.

            Recommended system requirements: 1GB RAM, x86 or arm64 CPU

            Documentation: https://glitchtip.com/documentation
        end: |-
            GlitchTip instance successfully deployed. It will allow you to register an account, afterwards registrations will be closed by default.
            If you want to use a different domain change the `GLITCHTIP_DOMAIN` variable.
            See https://glitchtip.com/documentation/install for additional environment variables available.
    displayName: GlitchTip
    isOfficial: true
    description: Simple, open source error tracking.
    documentation: This docker-compose is taken from https://glitchtip.com/assets/docker-compose.sample.yml
