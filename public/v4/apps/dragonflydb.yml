captainVersion: 4
services:
    $$cap_appname:
        image: docker.dragonflydb.io/dragonflydb/dragonfly:$$cap_dragonflydb_version
        volumes:
            - $$cap_appname-dragonflydb-data:/data
        restart: always
        environment:
            DFLY_requirepass: $$cap_dragonflydb_password
            DFLY_maxmemory: $$cap_dragonflydb_maxmem
caproverOneClickApp:
    variables:
        - id: $$cap_dragonflydb_version
          label: Dragonfly Version Tag
          description: 'Check out their Github page for the valid tags: https://github.com/dragonflydb/dragonfly/releases'
          defaultValue: 'v1.14.0'
          validRegex: /^v\d+\.\d+\.\d+$/
        - id: $$cap_dragonflydb_password
          label: Dragonfly Password
          validRegex: ''
        - id: $$cap_dragonflydb_maxmem
          label: Dragonfly Max Memory
          description: 'Dragonfly recommends at least 4GB to take advantage of its full power, however you can run with smaller amounts if necessary.'
          validRegex: /^[1-9]\d*GB$/
          defaultValue: 4GB
    instructions:
        start: >-
            Dragonfly is a simple, performant, and cost-efficient in-memory data store. Dragonfly is fully compatible with Redis APIs but without the Redis management complexity.

            After installation on CapRover, it will be available as srv-captain--YOUR_CONTAINER_NAME at port 6379 to other CapRover apps.

            Enter your Dragonfly container name and click on next. It will take about a minute for the process to finish.
        end: "Dragonfly is deployed and available as srv-captain--$$cap_appname:6379 to other apps. For example with NodeJS: const client = redis.createClient(6379, 'srv-captain--$$cap_appname' , {password: '$$cap_dragonflydb_password'})"
    displayName: 'Dragonfly'
    isOfficial: true
    description: Dragonfly is a simple, performant, and cost-efficient in-memory data store.
    documentation: Taken from https://www.dragonflydb.io/docs/getting-started/docker
