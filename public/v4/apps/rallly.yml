captainVersion: 4
services:
    $$cap_appname:
        restart: always
        depends_on:
            - $$cap_appname-postgres
        image: 'lukevella/rallly:$$cap_rallly_version'
        environment:
            NEXT_PUBLIC_BASE_URL: 'http://$$cap_appname.$$cap_root_domain'
            DATABASE_URL: >-
                postgres://rallly:$$cap_rallly_postgres_password@srv-captain--$$cap_appname-postgres:5432/db
            SECRET_PASSWORD: $$cap_rallly_passwd
            SUPPORT_EMAIL: $$cap_rallly_email
            SMTP_HOST: $$cap_rallly_smtp_host
            SMTP_PORT: $$cap_rallly_smtp_port
            SMTP_SECURE: $$cap_rallly_smtp_secure
            SMTP_USER: $$cap_rallly_smtp_user
            SMTP_PWD: $$cap_rallly_smtp_pwd
        caproverExtra:
            containerHttpPort: '3000'
    $$cap_appname-postgres:
        image: 'postgres:12'
        volumes:
            - '$$cap_appname-postgres-data:/var/lib/postgresql/data'
        restart: always
        environment:
            POSTGRES_USER: rallly
            POSTGRES_PASSWORD: $$cap_rallly_postgres_password
            POSTGRES_DB: db
        caproverExtra:
            notExposeAsWebApp: 'true'
caproverOneClickApp:
    variables:
        - id: $$cap_rallly_version
          label: Rallly Version
          defaultValue: ac55701890cd866ee946deb25e2b2839fb14900e
          description: >-
              Check out the docker page for valid tags
              https://hub.docker.com/r/lukevella/rallly/tags
          validRegex: '/^([^\s^\/])+$/'
        - id: $$cap_rallly_passwd
          label: Rallly Password
          description: >-
              A long string (minimum 32 characters) that is used to encrypt session
              data.
          defaultValue: $$cap_gen_random_hex(64)
          validRegex: '/^[^\@]{32,}$/'
        - id: $$cap_rallly_email
          label: Rallly From Email
          validRegex: '/^([^\s^\/])+$/'
          description: >-
              An email address that will appear as the FROM email for all emails being
              sent out.
        - id: $$cap_rallly_smtp_host
          label: Rallly SMTP Host
          description: Host name of your SMTP server
        - id: $$cap_rallly_smtp_port
          label: Rallly SMTP Port
          defaultValue: 465
          validRegex: '/.{1,}/'
          description: Port of your SMTP server
        - id: $$cap_rallly_smtp_secure
          label: Requires secure SMTP connection? true/false
          defaultValue: false
          validRegex: /^(false|true)$/
          description: Set to "true" if SSL is enabled for your SMTP connection
        - id: $$cap_rallly_smtp_user
          label: Rallly SMTP user
          description: Username to use for your SMTP connection
        - id: $$cap_rallly_smtp_pwd
          label: Rallly SMTP password
          description: Password to use for your SMTP connection
        - id: $$cap_rallly_postgres_password
          label: Password
          description: Postgres password (minimum 12 characters)
          defaultValue: $$cap_gen_random_hex(64)
          validRegex: '/^[^\@]{12,}$/'
    instructions:
        start: >-
            Install Rallly, an open source Doodle poll alternative. Find the best date
            for a meeting with your colleagues or friends without the back and forth
            emails. https://rallly.co/
        end: "You're done! \U0001F604 Your service is available at http://$$cap_appname.$$cap_root_domain"
    displayName: Rallly
    isOfficial: true
    description: >-
        Doodle poll alternative. Find the best date for a meeting with your
        colleagues or friends without the back and forth emails. This app is
        packaged with PostgreSQL.
    documentation: 'Taken from https://hub.docker.com/r/lukevella/rallly'
