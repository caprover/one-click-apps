{
    "captainVersion": "1",
    "documentation": "Taken from https://hub.docker.com/_/adminer except it is manually adjusted for port 80",
    "dockerCompose":
    {
        "version": "3.3",
        "services":
        {
            "$$cap_appname":
            {
                "dockerfileLines": [
                        "FROM adminer:$$cap_adminer_version",
                        "USER root",
                        "EXPOSE 80",
                        "CMD ['php', '-S', '[::]:80', '-t', '/var/www/html' ]"
                ],
                "restart": "always",
                "environment":
                {
                    "ADMINER_PLUGINS": "$$cap_adminer_plugins",
                    "ADMINER_DESIGN": "$$cap_adminer_design"
                }
            }
    },
    "instructions":{
        "start":"Adminer (formerly phpMinAdmin) is a full-featured database management tool written in PHP. Conversely to phpMyAdmin, it consist of a single file ready to deploy to the target server. Adminer is available for MySQL, PostgreSQL, SQLite, MS SQL, Oracle, Firebird, SimpleDB, Elasticsearch and MongoDB. \n\n For more details, see: https://github.com/vrana/adminer\n\n  Enter your Adminer Configuration parameters and click on next. It will take about a minute for the process to finish.",
        "end":"Adminer is deployed and available as $$cap_appname"
    },
    "variables": [
    {
        "id": "$$cap_adminer_version",
        "label": "Adminer Version Tag",
        "description": "Checkout their docker page for the valid tags https://hub.docker.com/r/library/adminer/tags/",
        "defaultValue": "4",
        "validRegex": "/^([a-zA-Z0-9-.])+$/"
    },
    {
        "id": "$$cap_adminer_design",
        "label": "OPTIONAL: Adminer Design",
        "description": "List of designs: https://github.com/vrana/adminer/tree/master/designs",
        "validRegex": "/^([a-zA-Z0-9-.])+$/"
    },
    {
        "id": "$$cap_adminer_plugins",
        "label": "OPTIONAL: Adminer plugins (space separated)",
        "defaultValue": "",
        "validRegex": "/^([a-zA-Z0-9-.\\s])+$/"
    }]

}
